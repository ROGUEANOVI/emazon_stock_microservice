plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.pragma.emazon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation "me.paulschwarz:spring-dotenv:3.0.0"
	implementation 'org.mapstruct:mapstruct:1.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
	properties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", "squ_917678584b7c6e9403474ce8191990bdb3d12bd2"
	}
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
	}
	dependsOn test
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}